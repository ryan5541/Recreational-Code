windows()
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month))
par(new="T")
plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
View(oldFaithful)     #try to understand the data, you may want to issue more commands, just to understand
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
summary(oldFaithful)
qplot(waiting, geom="density", data=oldFaithful)
par(new="T")
plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
par(new="F")
plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), "red", "black"), pch=19)
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", black), pch=19)
plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), "red", "black"), pch=19)
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), "black"), pch=19)
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), "black"), pch=19)
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), pch=19)
par(new="F")
plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
par(new="T")
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), "black"), pch=19)
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "red", "black"), "black"), pch=19)
plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), "black"), pch=19)
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "red", "black"), "black"), pch=19)
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "red", "black"), "black")), pch=19)
abline(h=quantile(faithful$eruptions, 0.25), col="red")
mtext("Q1", side=2, at=quantile(faithful$eruptions, 0.25), col="red")
abline(h=quantile(faithful$eruptions, 0.75), col="red")
mtext("Q3", side=2, at=quantile(faithful$eruptions, 0.75), col="red")
plot(faithful$waiting, faithful$eruptions, pch=19, cex=0.5, col="green")
abline(v=quantile(faithful$waiting, 0.25), col="red") #v= is for vertical line,
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "red", "black"), "black")), pch=19)
ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "red", "black"), "black"))
oldFaithful2 <- oldFaithful
?plot
plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black")), pch=19)
if(oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25))
if(oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25))
oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25
?par
waiting_q1 <- c()
eruptions_q1 <- c()
waiting_q3 <- c()
eruptions_q3 <- c()
for (i in oldFaithful)
{
if (i$eruptions < quantile(oldFaithful$eruptions, 0.25)
&& i$waiting < quantile(oldFaithful, 0.25))
{
waiting_q1 <- c(waiting_q1, i$waiting)
eruptions_q1 <- c(eruptions_q1, i$eruptions)
}
else if(i$eruptions > quantile(oldFaithful$eruptions, 0.75)
&& i$waiting > quantile(oldFaithful, 0.75))
{
waiting_q3 <- c(waiting_q3, i$waiting)
eruptions_q3 <- c(eruptions_q3, i$eruptions)
}
}
oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25)
oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25) && oldFaithful2$eruptions < quantile(oldFaithful2$eruptions, 0.25)
oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25) && oldFaithful2$eruptions < quantile(oldFaithful2$eruptions, 0.25)
oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25)
oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25) || oldFaithful2$eruptions < quantile(oldFaithful2$eruptions, 0.25)
str(oldFaithful$waiting)
list(oldFaithful$waiting)
col_condition <- ifelse(faithful$waiting < quantile(faithful$waiting, 0.25),
ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"),
ifelse(faithful$waiting > quantile(faithful$waiting, 0.75),
ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black"))
col_condition
plot(faithful$waiting, faithful$eruptions, pch=19, col=col_condition)
?table
table(oldFaithful$waiting < quantile(oldFaithful$waiting))
plot(faithful$waiting, faithful$eruptions, pch=19, col=col_condition)
??aes
?alpha
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=alpha(month, 0.5))
windows()
##3.6 Which month has the most ouliers, you can also use the the jitter flag to enhance viewability of outliers
#
#
#Q4   5-Points  I used the following R Commands to Produce the graph.
## You can get help on abline() and mtext() with the ?abline and ?mtext
plot(faithful$waiting, faithful$eruptions, pch=19, cex=0.5, col="green")
abline(v=quantile(faithful$waiting, 0.25), col="red") #v= is for vertical line,
mtext("Q1", side=1, at=quantile(faithful$waiting, 0.25), col="red")
##4.1 write the code to draw the line  and label for Q3 of waiting
abline(v=quantile(faithful$waiting, 0.75), col="red")
mtext("Q3", side=1, at=quantile(faithful$waiting, 0.75), col="red")
##4.2 write the code to draw the lines and labels for Q1, Q3 of erruptions,for horizontal use h=
abline(h=quantile(faithful$eruptions, 0.25), col="red")
mtext("Q1", side=2, at=quantile(faithful$eruptions, 0.25), col="red")
abline(h=quantile(faithful$eruptions, 0.75), col="red")
mtext("Q3", side=2, at=quantile(faithful$eruptions, 0.75), col="red")
# Q5 5-Points  write the R code to plot
## the points that are in the(Q1,Q1) quadrant of(waiting, eruption) in Red, AND
## the points that are in the(Q3,Q3) Quadrant of(waiting, eruption) in blue, everything else in black,
### use a pch=19 and cex=0.5. (Hint, plot everything with pch=19, col="black" first,
### then add the conditional points with the required colors, they will be superimposed on the old ones,
### whatever left stays in black).
#Yes, this answers the question, but I have a feeling there's an easier way to do this...
#I used nested "ifelse" statements to define the condition.
col_condition <- ifelse(faithful$waiting < quantile(faithful$waiting, 0.25),
ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"),
ifelse(faithful$waiting > quantile(faithful$waiting, 0.75),
ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black"))
col_condition #This is a list of colors generated by the nested ifelse statements.
plot(faithful$waiting, faithful$eruptions, pch=19, col=col_condition)
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=alpha(month, 0.5)))
library(GGally)
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=alpha(month, 0.5)))
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month), alpha = 0.5)
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month))
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5))
windows()
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5))
qplot(oldFaithful$month, oldFaithful$eruptions, geom="barplot")
?barplot
qplot(oldFaithful$month, oldFaithful$eruptions, geom="hist")
?qplot
qplot(oldFaithful$month, oldFaithful$eruptions, geom="histogram")
qplot(oldFaithful$month, oldFaithful$eruptions, geom="histogram")
?qplot
qplot(oldFaithful$waiting, oldFaithful$month, geom="histogram")
qplot(oldFaithful$waiting, oldFaithful$months, geom="histogram")
qplot(oldFaithful$waiting, oldFaithful$monts, geom="histogram")
qplot(oldFaithful$waiting, oldFaithful$month, geom="histogram")
?qplot
qplot(oldFaithful$month)
?barplot
table(oldFaithful$month)
qplot(oldFaithful$month)
barplot(oldFaithful$month)
load(file="./myOldFaithful.Rdata")
load("~/BUAN410/BUAN-410Exam-1/myOldFaithful.Rdata")
load(file="./myOldFaithful.Rdata")
View(oldFaithful)     #try to understand the data, you may want to issue more commands, just to understand
barplot(oldFaithful$month)
barplot(table(oldFaithful$month)
##1.3 Write the R code that produces the standard Deviation of the numeric variables
sd(oldFaithful$eruptions)
sd(oldFaithful$waiting)
##1.4 Write the R Code that produces the 86th Perecntile for each variable
quantile(oldFaithful$eruptions, 0.86)
quantile(oldFaithful$waiting, 0.86)
quantile(month_asInt, 0.86)
##1.5 Write the R code that calculates the correlation between waiting and eruptions
cor(oldFaithful$waiting, oldFaithful$eruptions)
#Q2   5-Points
windows()
qplot(waiting, geom="density", data=oldFaithful)
windows()
qplot(waiting, geom="density", color=month, data=oldFaithful)
windows()
qplot(waiting, geom="density", fill=month, alpha=0.4, data=oldFaithful)
##2.1 perform similar density qplots for erruption too
windows()
qplot(eruptions, geom="density", data=oldFaithful)
windows()
qplot(eruptions, geom="density", color=month, data=oldFaithful)
windows()
qplot(eruptions, geom="density", fill=month, alpha=0.4, data=oldFaithful)
##2.2 What is your insight about the various aspects of the data
#
#
#
#Q3   15-Points
##3.1 Use ggplot to perform a scatter plot with x=month and y=waiting, color it by month
qplot(month, waiting, color=month, data = oldFaithful)
##3.2 Use ggplot to perform a scatter plot with x=month and yeruptions, color it by month
qplot(month, eruptions, color=month, data = oldFaithful)
##3.3 Use ggplot to perform the boxplots of waiting and eruptions using month as a discrementationg color
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot")
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot")
##3.4 From the plots, What are your insights into the Data
#
#
##3.5 You need to install and load the GGally library for this one
## Perform the ggpairs plot with aes color as month and alpha= a number of your choice,
## play with the different alpha values to get a nice shading
install.packages("GGally")
library(GGally)
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5))
windows()
##3.6 Which month has the most ouliers, you can also use the the jitter flag to enhance viewability of outliers
#
#
#Q4   5-Points  I used the following R Commands to Produce the graph.
## You can get help on abline() and mtext() with the ?abline and ?mtext
plot(faithful$waiting, faithful$eruptions, pch=19, cex=0.5, col="green")
abline(v=quantile(faithful$waiting, 0.25), col="red") #v= is for vertical line,
mtext("Q1", side=1, at=quantile(faithful$waiting, 0.25), col="red")
##4.1 write the code to draw the line  and label for Q3 of waiting
abline(v=quantile(faithful$waiting, 0.75), col="red")
mtext("Q3", side=1, at=quantile(faithful$waiting, 0.75), col="red")
##4.2 write the code to draw the lines and labels for Q1, Q3 of erruptions,for horizontal use h=
abline(h=quantile(faithful$eruptions, 0.25), col="red")
mtext("Q1", side=2, at=quantile(faithful$eruptions, 0.25), col="red")
abline(h=quantile(faithful$eruptions, 0.75), col="red")
mtext("Q3", side=2, at=quantile(faithful$eruptions, 0.75), col="red")
# Q5 5-Points  write the R code to plot
## the points that are in the(Q1,Q1) quadrant of(waiting, eruption) in Red, AND
## the points that are in the(Q3,Q3) Quadrant of(waiting, eruption) in blue, everything else in black,
### use a pch=19 and cex=0.5. (Hint, plot everything with pch=19, col="black" first,
### then add the conditional points with the required colors, they will be superimposed on the old ones,
### whatever left stays in black).
#Yes, this answers the question, but I have a feeling there's an easier way to do this...
#I used nested "ifelse" statements to define the condition.
col_condition <- ifelse(faithful$waiting < quantile(faithful$waiting, 0.25),
ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"),
ifelse(faithful$waiting > quantile(faithful$waiting, 0.75),
ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black"))
col_condition #This is a list of colors generated by the nested ifelse statements.
plot(faithful$waiting, faithful$eruptions, pch=19, col=col_condition)
barplot(table(oldFaithful$month))
barplot(table(oldFaithful$month))
qplot(oldFaithful$month)
barplot(table(oldFaithful$month))
quantile(oldFaithful$month, 0.86)
quantile(table(oldFaithful$month), 0.86)
table(oldFaithful$month)
quantile(oldFaithful$month, 0.86)
quantile(oldFaithful$month, 0.86)
quantile(table(oldFaithful$month), 0.86)
str(table(oldFaithful$month))
cor(oldFaithful$waiting, oldFaithful$eruptions)
qplot(waiting, geom="density", data=oldFaithful)
qplot(waiting, geom="density", color=month, data=oldFaithful)
qplot(waiting, geom="density", fill=month, alpha=0.4, data=oldFaithful)
qplot(eruptions, geom="density", data=oldFaithful)
qplot(waiting, geom="density", data=oldFaithful)
qplot(waiting, geom="density", color=month, data=oldFaithful)
qplot(waiting, geom="density", data=oldFaithful)
qplot(eruptions, geom="density", data=oldFaithful)
qplot(waiting, geom="density", data=oldFaithful)
qplot(waiting, geom="density", color=month, data=oldFaithful)
qplot(waiting, geom="density", fill=month, alpha=0.4, data=oldFaithful)
qplot(waiting, geom="density", color=month, data=oldFaithful)
windows()
qplot(waiting, geom="density", data=oldFaithful)
?dev
??dev
?dev
?dev()
dev()
dev.set(1)
??dev
qplot(waiting, geom="density", data=oldFaithful)
dev.set(5)
qplot(waiting, geom="density", data=oldFaithful)
qplot(waiting, geom="density", color=month, data=oldFaithful)
qplot(eruptions, geom="density", fill=month, alpha=0.4, data=oldFaithful)
qplot(eruptions, geom="density", data=oldFaithful)
qplot(eruptions, geom="density", color=month, data=oldFaithful)
qplot(eruptions, geom="density", fill=month, alpha=0.4, data=oldFaithful)
cor(oldFaithful$waiting, oldFaithful$eruptions)
qplot(month, waiting, color=month, data = oldFaithful)
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot")
qplot(month, waiting, color=month, data=oldFaithful, geom = c("boxplot", "jitter")
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot")
##3.4 From the plots, What are your insights into the Data
#
#
##3.5 You need to install and load the GGally library for this one
## Perform the ggpairs plot with aes color as month and alpha= a number of your choice,
## play with the different alpha values to get a nice shading
install.packages("GGally")
library(GGally)
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5))
windows()
##3.6 Which month has the most ouliers, you can also use the the jitter flag to enhance viewability of outliers
#
#
#Q4   5-Points  I used the following R Commands to Produce the graph.
## You can get help on abline() and mtext() with the ?abline and ?mtext
plot(faithful$waiting, faithful$eruptions, pch=19, cex=0.5, col="green")
abline(v=quantile(faithful$waiting, 0.25), col="red") #v= is for vertical line,
mtext("Q1", side=1, at=quantile(faithful$waiting, 0.25), col="red")
##4.1 write the code to draw the line  and label for Q3 of waiting
abline(v=quantile(faithful$waiting, 0.75), col="red")
mtext("Q3", side=1, at=quantile(faithful$waiting, 0.75), col="red")
##4.2 write the code to draw the lines and labels for Q1, Q3 of erruptions,for horizontal use h=
abline(h=quantile(faithful$eruptions, 0.25), col="red")
mtext("Q1", side=2, at=quantile(faithful$eruptions, 0.25), col="red")
abline(h=quantile(faithful$eruptions, 0.75), col="red")
mtext("Q3", side=2, at=quantile(faithful$eruptions, 0.75), col="red")
# Q5 5-Points  write the R code to plot
## the points that are in the(Q1,Q1) quadrant of(waiting, eruption) in Red, AND
## the points that are in the(Q3,Q3) Quadrant of(waiting, eruption) in blue, everything else in black,
### use a pch=19 and cex=0.5. (Hint, plot everything with pch=19, col="black" first,
### then add the conditional points with the required colors, they will be superimposed on the old ones,
### whatever left stays in black).
#Yes, this answers the question, but I have a feeling there's an easier way to do this...
#I used nested "ifelse" statements to define the condition.
col_condition <- ifelse(faithful$waiting < quantile(faithful$waiting, 0.25),
ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"),
ifelse(faithful$waiting > quantile(faithful$waiting, 0.75),
ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black"))
col_condition #This is a list of colors generated by the nested ifelse statements.
plot(faithful$waiting, faithful$eruptions, pch=19, col=col_condition)
qplot(month, waiting, color=month, data=oldFaithful, geom = c("boxplot", "jitter"))
?jitter
??jitter
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot, position = "jitter")
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot")
##3.4 From the plots, What are your insights into the Data
#
#
##3.5 You need to install and load the GGally library for this one
## Perform the ggpairs plot with aes color as month and alpha= a number of your choice,
## play with the different alpha values to get a nice shading
install.packages("GGally")
library(GGally)
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5))
windows()
##3.6 Which month has the most ouliers, you can also use the the jitter flag to enhance viewability of outliers
#
#
#Q4   5-Points  I used the following R Commands to Produce the graph.
## You can get help on abline() and mtext() with the ?abline and ?mtext
plot(faithful$waiting, faithful$eruptions, pch=19, cex=0.5, col="green")
abline(v=quantile(faithful$waiting, 0.25), col="red") #v= is for vertical line,
mtext("Q1", side=1, at=quantile(faithful$waiting, 0.25), col="red")
##4.1 write the code to draw the line  and label for Q3 of waiting
abline(v=quantile(faithful$waiting, 0.75), col="red")
mtext("Q3", side=1, at=quantile(faithful$waiting, 0.75), col="red")
##4.2 write the code to draw the lines and labels for Q1, Q3 of erruptions,for horizontal use h=
abline(h=quantile(faithful$eruptions, 0.25), col="red")
mtext("Q1", side=2, at=quantile(faithful$eruptions, 0.25), col="red")
abline(h=quantile(faithful$eruptions, 0.75), col="red")
mtext("Q3", side=2, at=quantile(faithful$eruptions, 0.75), col="red")
# Q5 5-Points  write the R code to plot
## the points that are in the(Q1,Q1) quadrant of(waiting, eruption) in Red, AND
## the points that are in the(Q3,Q3) Quadrant of(waiting, eruption) in blue, everything else in black,
### use a pch=19 and cex=0.5. (Hint, plot everything with pch=19, col="black" first,
### then add the conditional points with the required colors, they will be superimposed on the old ones,
### whatever left stays in black).
#Yes, this answers the question, but I have a feeling there's an easier way to do this...
#I used nested "ifelse" statements to define the condition.
col_condition <- ifelse(faithful$waiting < quantile(faithful$waiting, 0.25),
ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"),
ifelse(faithful$waiting > quantile(faithful$waiting, 0.75),
ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black"))
col_condition #This is a list of colors generated by the nested ifelse statements.
plot(faithful$waiting, faithful$eruptions, pch=19, col=col_condition)
#Below is me thinking about the problem...
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black")), pch=19)
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), pch=19)
# plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
# par(new="T")
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "red", "black"), "black"), pch=19)
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), "red", "black"), pch=19)
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "red", "black"), pch=19)
#?plot
#str(oldFaithful$waiting)
#list(oldFaithful$waiting)
#oldFaithful2 <- oldFaithful
#oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25)
#?par
#waiting_q1 <- c()
#eruptions_q1 <- c()
#waiting_q3 <- c()
#eruptions_q3 <- c()
# for (i in oldFaithful)
# {
#     if (i$eruptions < quantile(oldFaithful$eruptions, 0.25)
#         && i$waiting < quantile(oldFaithful, 0.25))
#     {
#         waiting_q1 <- c(waiting_q1, i$waiting)
#         eruptions_q1 <- c(eruptions_q1, i$eruptions)
#     }
#
#     else if(i$eruptions > quantile(oldFaithful$eruptions, 0.75)
#         && i$waiting > quantile(oldFaithful, 0.75))
#     {
#         waiting_q3 <- c(waiting_q3, i$waiting)
#         eruptions_q3 <- c(eruptions_q3, i$eruptions)
#     }
# }
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot, position = "jitter")
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot")
##3.4 From the plots, What are your insights into the Data
#
#
##3.5 You need to install and load the GGally library for this one
## Perform the ggpairs plot with aes color as month and alpha= a number of your choice,
## play with the different alpha values to get a nice shading
install.packages("GGally")
library(GGally)
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5))
windows()
##3.6 Which month has the most ouliers, you can also use the the jitter flag to enhance viewability of outliers
#
#
#Q4   5-Points  I used the following R Commands to Produce the graph.
## You can get help on abline() and mtext() with the ?abline and ?mtext
plot(faithful$waiting, faithful$eruptions, pch=19, cex=0.5, col="green")
abline(v=quantile(faithful$waiting, 0.25), col="red") #v= is for vertical line,
mtext("Q1", side=1, at=quantile(faithful$waiting, 0.25), col="red")
##4.1 write the code to draw the line  and label for Q3 of waiting
abline(v=quantile(faithful$waiting, 0.75), col="red")
mtext("Q3", side=1, at=quantile(faithful$waiting, 0.75), col="red")
##4.2 write the code to draw the lines and labels for Q1, Q3 of erruptions,for horizontal use h=
abline(h=quantile(faithful$eruptions, 0.25), col="red")
mtext("Q1", side=2, at=quantile(faithful$eruptions, 0.25), col="red")
abline(h=quantile(faithful$eruptions, 0.75), col="red")
mtext("Q3", side=2, at=quantile(faithful$eruptions, 0.75), col="red")
# Q5 5-Points  write the R code to plot
## the points that are in the(Q1,Q1) quadrant of(waiting, eruption) in Red, AND
## the points that are in the(Q3,Q3) Quadrant of(waiting, eruption) in blue, everything else in black,
### use a pch=19 and cex=0.5. (Hint, plot everything with pch=19, col="black" first,
### then add the conditional points with the required colors, they will be superimposed on the old ones,
### whatever left stays in black).
#Yes, this answers the question, but I have a feeling there's an easier way to do this...
#I used nested "ifelse" statements to define the condition.
col_condition <- ifelse(faithful$waiting < quantile(faithful$waiting, 0.25),
ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"),
ifelse(faithful$waiting > quantile(faithful$waiting, 0.75),
ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black"))
col_condition #This is a list of colors generated by the nested ifelse statements.
plot(faithful$waiting, faithful$eruptions, pch=19, col=col_condition)
#Below is me thinking about the problem...
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting < quantile(faithful$waiting, 0.25), ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black")), pch=19)
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"), pch=19)
# plot(faithful$waiting, faithful$eruptions, pch=19, col="black")
# par(new="T")
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "red", "black"), "black"), pch=19)
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$waiting > quantile(faithful$waiting, 0.75), "red", "black"), pch=19)
# plot(faithful$waiting, faithful$eruptions, col = ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "red", "black"), pch=19)
#?plot
#str(oldFaithful$waiting)
#list(oldFaithful$waiting)
#oldFaithful2 <- oldFaithful
#oldFaithful2$waiting < quantile(oldFaithful2$waiting, 0.25)
#?par
#waiting_q1 <- c()
#eruptions_q1 <- c()
#waiting_q3 <- c()
#eruptions_q3 <- c()
# for (i in oldFaithful)
# {
#     if (i$eruptions < quantile(oldFaithful$eruptions, 0.25)
#         && i$waiting < quantile(oldFaithful, 0.25))
#     {
#         waiting_q1 <- c(waiting_q1, i$waiting)
#         eruptions_q1 <- c(eruptions_q1, i$eruptions)
#     }
#
#     else if(i$eruptions > quantile(oldFaithful$eruptions, 0.75)
#         && i$waiting > quantile(oldFaithful, 0.75))
#     {
#         waiting_q3 <- c(waiting_q3, i$waiting)
#         eruptions_q3 <- c(eruptions_q3, i$eruptions)
#     }
# }
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot")
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
windows()
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5))
dev.set(4)
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5))
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5), position = "jitter")
?ggpairs
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5)) + geom_jitter()
warnings()
ggpairs(data=oldFaithful, mapping=ggplot2::aes(color=month, alpha=0.5))
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, waiting, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
qplot(month, eruptions, color=month, data=oldFaithful, geom = "boxplot", position = "jitter")
plot(faithful$waiting, faithful$eruptions, pch=19, cex=0.5, col="green")
abline(v=quantile(faithful$waiting, 0.25), col="red") #v= is for vertical line,
mtext("Q1", side=1, at=quantile(faithful$waiting, 0.25), col="red")
abline(v=quantile(faithful$waiting, 0.75), col="red")
mtext("Q3", side=1, at=quantile(faithful$waiting, 0.75), col="red")
abline(h=quantile(faithful$eruptions, 0.25), col="red")
mtext("Q1", side=2, at=quantile(faithful$eruptions, 0.25), col="red")
abline(h=quantile(faithful$eruptions, 0.75), col="red")
mtext("Q3", side=2, at=quantile(faithful$eruptions, 0.75), col="red")
col_condition <- ifelse(faithful$waiting < quantile(faithful$waiting, 0.25),
ifelse(faithful$eruptions < quantile(faithful$eruptions, 0.25), "red", "black"),
ifelse(faithful$waiting > quantile(faithful$waiting, 0.75),
ifelse(faithful$eruptions > quantile(faithful$eruptions, 0.75), "blue", "black"), "black"))
plot(faithful$waiting, faithful$eruptions, pch=19, col=col_condition)
plot(faithful$waiting, faithful$eruptions, pch=19, cex=0.5, col=col_condition)
abline(v=quantile(faithful$waiting, 0.25), col="red") #v= is for vertical line,
mtext("Q1", side=1, at=quantile(faithful$waiting, 0.25), col="red")
abline(v=quantile(faithful$waiting, 0.75), col="red")
mtext("Q3", side=1, at=quantile(faithful$waiting, 0.75), col="red")
abline(h=quantile(faithful$eruptions, 0.25), col="red")
mtext("Q1", side=2, at=quantile(faithful$eruptions, 0.25), col="red")
abline(h=quantile(faithful$eruptions, 0.75), col="red")
mtext("Q3", side=2, at=quantile(faithful$eruptions, 0.75), col="red")
setwd("C:/Users/Ryan/Google Drive/Miscellaneous")
